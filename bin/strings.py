import collections
import random
from datetime import datetime

import database
from src.config import COMMENT
from src.const import const_ru


def format_stat(dict_data):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏

    :param dict_data: —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏
    :return:
    """
    result = ""
    for key, value in collections.Counter(dict_data).most_common(10):
        result += f"‚ñ´ {key} - {value}\n"

    return result


def item_format(item):
    """
    –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Å —Ç–æ–≤–∞—Ä–æ–º

    :param item: –æ–±—ä–µ–∫—Ç –∏–∑ –ë–î —Å —Ç–æ–≤–∞—Ä–æ–º
    :return:
    """
    return f"{item[1]} | {item[4]} —Ä—É–±. | {database.get_item_count(item[0])} —à—Ç."


def create_comment():
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –¥–ª—è –æ–ø–ª–∞—Ç—ã

    :return:
    """
    key_pass = list("1234567890QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm")
    random.shuffle(key_pass)
    key_buy = "".join([random.choice(key_pass) for i in range(10)])

    return f"{COMMENT}:{key_buy}"


def get_now_date():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã

    :return:
    """
    now_data = datetime.now()

    return now_data.strftime("%d/%m/%Y %H:%M:%S")


def get_cheque_num():
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ —á–µ–∫–∞

    :return:
    """
    key_pass = list("1234567890QWERTYUIOPASDFGHJKLZXCVBNM")
    random.shuffle(key_pass)
    return "#" + "".join([random.choice(key_pass) for i in range(8)])


def get_user_link(user_id):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∞ –Ω–∞ —é–∑–µ—Ä–∞

    :param user_id: id —é–∑–µ—Ä–∞
    :return:
    """
    user = database.get_user(str(user_id))
    if user is None:
        return ""

    if user[2] is None:
        nickname = user[0]
    else:
        nickname = user[2]

    return f"<a href='tg://user?id={user[0]}'>{nickname}</a>"


def get_user_info(user):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ

    :param user: –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return:
    """
    sales_list = database.get_user_buy(user[0])

    user_info = f"üôç‚Äç‚ôÇ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {get_user_link(user[0])}\n" \
                f"üÜî ID: <b>{user[0]}</b>\n" \
                f"üí≥ –°—É–º–º–∞ –±–∞–ª–∞–Ω—Å–∞: <b>{user[4]} —Ä—É–±.</b>\n" \
                f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                f"üõí –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫: <b>{len(sales_list)} —à—Ç.</b>\n" \
                f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞: <b>{sum(row[3] for row in sales_list)} —Ä—É–±.</b>\n" \
                f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                f"üì± –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –ø–æ–∫—É–ø–æ–∫:\n\n"

    sales_list = sales_list[::-1][:10]

    for sale in sales_list:
        user_info += f"‚ñ´ {sale[2]} | {sale[4]} —à—Ç. | {sale[3]} —Ä—É–±. | {sale[6]}\n"

    return user_info


def get_pay_message(name_buy, payment_form: dict, comment, amount):
    """
    –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–ø–ª–∞—Ç—ã

    :param name_buy: –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏
    :param payment_form: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–ø–ª–∞—Ç–µ
    :param comment: –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    :param amount: —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–ø–ª–∞—Ç—ã
    :return:
    """
    pay_info = f"üí≥ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: <b>{payment_form['name']}</b>\n"

    if payment_form['name'] == const_ru['qiwi']:
        pay_info += f"üì± {payment_form['key']}: <b>{payment_form['value']}</b>\n" \
                    f"üìã –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: <b>{comment}</b>\n"

    return f"üí≥ {name_buy}\n" \
           f"–î–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ <b>{const_ru['buy_item']}</b>\n" \
           f"–ü–æ–ª—è –º–µ–Ω—è—Ç—å <b>–Ω–µ –Ω—É–∂–Ω–æ</b>\n" \
           f"{payment_form['warning']}\n" \
           f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ <b>{const_ru['check_buy']}</b>\n\n" \
           f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
           f"{pay_info}" \
           f"üíµ –°—É–º–º–∞ –æ–ø–ª–∞—Ç—ã: <b>{amount} —Ä—É–±.</b>\n" \
           f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ"


def get_buy_message(purchase_data, user_mode):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–∫—É–ø–∫–µ

    :param user_id: id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param purchase_data: –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–∫—É–ø–∫–µ
    :param user_mode: true - —Ä–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, false - –∞–¥–º–∏–Ω
    :return:
    """
    if user_mode:
        return "üõí –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–∫—É–ø–∫–µ\n" \
               f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
               f"üÜî –ß–µ–∫: <b>{purchase_data['cheque']}</b>\n" \
               f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
               f"üìô –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: <b>{purchase_data['item_name']}</b>\n" \
               f"üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: <b>{purchase_data['count']} —à—Ç.</b>\n" \
               f"üí∞ –°—É–º–º–∞ –ø–æ–∫—É–ø–∫–∏: <b>{purchase_data['amount']} —Ä—É–±.</b>\n" \
               f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
               f"üì± –î–∞–Ω–Ω—ã–µ:\n\n"
    else:
        return "üõí –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–∫—É–ø–∫–µ\n" \
               f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
               f"üÜî –ß–µ–∫: <b>{purchase_data['cheque']}</b>\n" \
               f"üôç‚Äç‚ôÇ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: {get_user_link(purchase_data['user_id'])}\n" \
               f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
               f"üìô –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: <b>{purchase_data['item_name']}</b>\n" \
               f"üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: <b>{purchase_data['count']} —à—Ç</b>\n" \
               f"üí∞ –°—É–º–º–∞ –ø–æ–∫—É–ø–∫–∏: <b>{purchase_data['amount']} —Ä—É–±.</b>\n" \
               f"üí≥ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: {purchase_data['payment_type']}\n" \
               f"üìÜ –î–∞—Ç–∞ –ø–æ–∫—É–ø–∫–∏: {purchase_data['date']}\n" \
               f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
               f"üì± –î–∞–Ω–Ω—ã–µ:\n\n"
